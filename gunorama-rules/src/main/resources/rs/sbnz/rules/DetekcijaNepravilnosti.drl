package rs.sbnz.rules;

import java.util.Set;

import rs.sbnz.gunorama.model.Zahtjev;
import rs.sbnz.gunorama.model.enums.TipDokumenta;
import rs.sbnz.gunorama.model.events.Prekrsaj;
import rs.sbnz.gunorama.model.events.DetektovanaNepravilnost;

rule "Detektovana Nepravilnost - falsifikovan lovacki ispit"
    no-loop true
    when
        $eventZahtjevNovi: Zahtjev($korisnik: korisnik, $domenPrimjene: domenPrimjene, TipDokumenta.DOKAZ_O_POLOZENOM_LOVACKOM_ISPITU memberOf dokumenti)
        $kontradiktorniZahtjevi: Set() from accumulate(
            $eventZahtjevStari: Zahtjev(
                this != $eventZahtjevNovi,
                odobren == false,
                korisnik.getJmbg() == $korisnik.getJmbg(),
                this before[1s, 15d] $eventZahtjevNovi,
                !dokumenti.contains(TipDokumenta.DOKAZ_O_POLOZENOM_LOVACKOM_ISPITU) && dokumenti.size() > 0
            ),
            collectSet($eventZahtjevStari)
        )
        eval($kontradiktorniZahtjevi.size() > 0)
        not(
            DetektovanaNepravilnost(zahtjevId == $eventZahtjevNovi.getId())
        )
    then
        System.out.println("DETEKTOVANA NEPRAVILNOST ZA ZAHTJEV " + $eventZahtjevNovi.getId() + " NA OSNOVU " + $kontradiktorniZahtjevi.size() + " STARA ZAHTJEVA");
        modify($eventZahtjevNovi) {
            setOdobren(false),
            setNepravilnost("Falsifikovan dokaz o polozenom lovackom ispitu.");
        }
        insert(new DetektovanaNepravilnost($korisnik.getId(), $eventZahtjevNovi.getId(), false));
end

rule "Gradjanin Pocinio Bar 5 Prekrsaja i Detektovana Nepravilnost"
    no-loop true
    salience 1
    when
        $z: Zahtjev($korisnik: korisnik, $domenPrimjene: domenPrimjene, $domenPrimjene != null)
        Number($brojPrekrsaja: intValue >= 5) from accumulate (
            $gpp: Prekrsaj($jmbg: jmbg, $jmbg == $korisnik.getJmbg(), this before[1s, 180d] $z),
            count($gpp)
        )
        $dn: DetektovanaNepravilnost(zahtjevId == $z.getId(), obradjena == false)
    then
        System.out.println("GRADJANINU SE ZABRANJUJE DALJE PODNOSENJE ZAHTJEVA");
        modify($dn) {
            setObradjena(true);
        }
        modify($z) {
            setOdobren(false),
            setNepravilnost("Gradjanin je pocinio " + $brojPrekrsaja + " prekrsaja i detektovana mu je nepravilnost.");
        }
        modify($korisnik) {
            setPrestupnik(true);
        }
end

rule "Gradjanin Pocinio Bar 5 Prekrsaja"
    no-loop true
    salience 0
    when
        $z: Zahtjev($korisnik: korisnik, $domenPrimjene: domenPrimjene, $domenPrimjene != null)
        Number($brojPrekrsaja: intValue >= 5) from accumulate (
            $gpp: Prekrsaj($jmbg: jmbg, $jmbg == $korisnik.getJmbg(), this before[1s, 180d] $z),
            count($gpp)
        )
        not (
            $dn: DetektovanaNepravilnost(zahtjevId == $z.getId())
        )
    then
        System.out.println("GRADJANIN JE POCINIO " + $brojPrekrsaja + " PREKRSAJA");
        modify($z) {
            setOdobren(false),
            setNepravilnost("Gradjanin je pocinio " + $brojPrekrsaja + " prekrsaja.");
        }
end
