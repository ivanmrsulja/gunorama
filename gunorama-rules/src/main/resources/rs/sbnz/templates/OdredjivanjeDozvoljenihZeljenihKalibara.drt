template header
zeljenaKonkretnaNamjena
minimalniPrecnikUMilimetrima
maksimalniPrecnikUMilimetrima

package rs.sbnz.templates;

import rs.sbnz.gunorama.model.enums.*;
import rs.sbnz.gunorama.model.*;
import rs.sbnz.gunorama.model.facts.*;
import rs.sbnz.gunorama.model.faze.*;
import java.util.*;

template "odredjivanje-dozvoljenih-zeljenih-kalibara"

rule "Odredjivanje kalibara uspjesno_@{row.rowNumber}"
  agenda-group "Odredjivanje dozvoljenih kalibara"
  no-loop true
  salience 1
  when 
    $z: Zahtjev($id: id)
    $konkretnaNamjenaFact: KonkretnaNamjenaFact(zahtjevId == $id, konkretnaNamjena == KonkretnaNamjena.@{zeljenaKonkretnaNamjena})
    $kalibri: Set() from accumulate (
      $kalibar: Kalibar( KonkretnaNamjena.@{zeljenaKonkretnaNamjena} memberOf namjene, 
                      uMilimetrima >= @{minimalniPrecnikUMilimetrima}, 
                      uMilimetrima <= @{maksimalniPrecnikUMilimetrima});
      collectSet($kalibar)
    )
    then
      System.out.println("DOZVOLJENI KALIBRI ZA " + KonkretnaNamjena.@{zeljenaKonkretnaNamjena} + " >= " + @{minimalniPrecnikUMilimetrima} + ", <= " + @{maksimalniPrecnikUMilimetrima}  + $kalibri);
      insert(new DozvoljeniZeljeniKalibriFact($id, $kalibri));
end

rule "Odredjivanje kalibara neuspjesno_@{row.rowNumber}"
  agenda-group "Odredjivanje dozvoljenih kalibara"
  no-loop true
  salience -1
  when 
    $z: Zahtjev($id: id)
    $konkretnaNamjenaFact: KonkretnaNamjenaFact(zahtjevId == $id, konkretnaNamjena == KonkretnaNamjena.@{zeljenaKonkretnaNamjena})
    not (DozvoljeniZeljeniKalibriFact(zahtjevId == $id))
    then
      System.out.println("DOZVOLJENI KALIBRI ZA " + KonkretnaNamjena.@{zeljenaKonkretnaNamjena} + " >= " + @{minimalniPrecnikUMilimetrima} + ", <= " + @{maksimalniPrecnikUMilimetrima}  + " JE PRAZNA LISTA.");
      insert(new DozvoljeniZeljeniKalibriFact($id, new HashSet<Kalibar>()));
end

end template